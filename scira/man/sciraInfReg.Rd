% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sciraInfReg.R
\name{sciraInfReg}
\alias{sciraInfReg}
\title{Infers Regulatory Network}
\usage{
sciraInfReg(
  data.m,
  regEID.v,
  sdth = 0.25,
  sigth = NULL,
  spTH = 0.01,
  pcorth = 0.2,
  minNtgts = 10,
  ncores = 4
)
}
\arguments{
\item{data.m}{The normalized gene expression data with rownames annotated to Entrez gene IDs (ensure these are unique) and columns labeling the samples}

\item{regEID.v}{A vector listing the regulators/transcription factors, and annotated to Entrez gene IDs}

\item{sdth}{A threshold on the standard deviation of gene expression in data.m, to select genes with standard deviation larger than sdth.}

\item{sigth}{The significance P-value threshold for the marginal correlations. If not specified it uses the Bonferroni threshold.}

\item{spTH}{This parameter controls the sparsity of the regulatory network. It is a threshold on the number of allowed marginal associations (expressed as a percentage). The default value is 0.01, i.e. if at the given value of sigth, the fraction of marginal correlations is larger than 0.01, we cap the fraction at 0.01 and only retain the top 1\% of associations}

\item{pcorth}{A significance threshold on the partial correlation values. By default this is set to 0.2. User needs to select or estimate this for each dataset and choose an appropriate threshold designed to find the appropriate number of target genes per regulator.}

\item{minNtgts}{The minimum number of gene targets required for each transcription factor}

\item{ncores}{Number of parallel cores to use.}
}
\value{
A list of two elements:

regnet
The regulon matrix with columns labeling the transcription factors and rows labeling the target geens, with entries either 1 (positive interaction), -1 (inhibitory interaction) or 0 (no association).

exp
The bulk tissue expression matrix.
}
\description{
This function infers a general regulatory network given a bulk RNA-Seq dataset (e.g. GTEX)
}
\examples{
pheno.v <- c(rep(1,50),rep(2,50));
data.m <- matrix(rnorm(10000,0,1),nrow=1000,ncol=100);
data.m[1:100,1:50] <- matrix(rnorm(5000,2,1),nrow=100,ncol=50);
out.o <- LimmaFn(pheno.v,data.m);

}
